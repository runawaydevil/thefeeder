services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: web
    env_file:
      - ./.env
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://thefeeder:thefeeder@db:5432/thefeeder
      - REDIS_URL=redis://redis:6379
      - WORKER_API_URL=http://worker:3001
      - WORKER_API_TOKEN=${WORKER_API_TOKEN:-change-me-in-production}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-change-me-in-production-generate-random-secret}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:8041}
      - TZ=${TZ:-America/Sao_Paulo}
    ports:
      - "8041:3000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s
    restart: unless-stopped

  worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: worker
    env_file:
      - ./.env
    ports:
      - "7388:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://thefeeder:thefeeder@db:5432/thefeeder
      - REDIS_URL=redis://redis:6379
      - SMTP_HOST=${SMTP_HOST:-}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_SECURE=${SMTP_SECURE:-false}
      - SMTP_USER=${SMTP_USER:-}
      - SMTP_PASS=${SMTP_PASS:-}
      - SMTP_FROM=${SMTP_FROM:-noreply@thefeeder.com}
      - TZ=${TZ:-America/Sao_Paulo}
      - DIGEST_TIME=${DIGEST_TIME:-09:00}
      - NEXT_PUBLIC_SITE_URL=${NEXT_PUBLIC_SITE_URL:-http://localhost:8041}
      - WORKER_API_PORT=3001
      - WORKER_API_TOKEN=${WORKER_API_TOKEN:-change-me-in-production}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      web:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=thefeeder
      - POSTGRES_PASSWORD=thefeeder
      - POSTGRES_DB=thefeeder
    ports:
      - "15432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U thefeeder"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "16379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redisdata:/data

volumes:
  pgdata:
  redisdata:


